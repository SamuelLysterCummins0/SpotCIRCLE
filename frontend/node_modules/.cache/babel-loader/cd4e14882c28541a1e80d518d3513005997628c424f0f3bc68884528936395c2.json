{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nconst SpotifyPlayer = ({\n  uri,\n  isPlaying,\n  onPlayPause\n}) => {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [deviceId, setDeviceId] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  useEffect(() => {\n    // Load Spotify Web Playback SDK\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: 'SpotCIRCLE Web Player',\n        getOAuthToken: cb => {\n          cb(localStorage.getItem('spotify_access_token'));\n        },\n        volume: 0.5\n      });\n\n      // Error handling\n      player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error('Failed to initialize:', message);\n      });\n      player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error('Failed to authenticate:', message);\n      });\n      player.addListener('account_error', ({\n        message\n      }) => {\n        console.error('Failed to validate Spotify account:', message);\n      });\n      player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error('Failed to perform playback:', message);\n      });\n\n      // Playback status updates\n      player.addListener('player_state_changed', state => {\n        if (state) {\n          onPlayPause(!state.paused);\n        }\n      });\n\n      // Ready\n      player.addListener('ready', ({\n        device_id\n      }) => {\n        console.log('Ready with Device ID', device_id);\n        setDeviceId(device_id);\n        setIsReady(true);\n        setPlayer(player);\n      });\n      player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n        setIsReady(false);\n      });\n      player.connect();\n    };\n    return () => {\n      if (player) {\n        player.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!uri || !isReady || !deviceId) return;\n    const play = async () => {\n      try {\n        await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            uris: [uri]\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('spotify_access_token')}`\n          }\n        });\n      } catch (error) {\n        console.error('Error starting playback:', error);\n      }\n    };\n    play();\n  }, [uri, isReady, deviceId]);\n  useEffect(() => {\n    if (!player) return;\n    if (isPlaying) {\n      player.resume();\n    } else {\n      player.pause();\n    }\n  }, [isPlaying, player]);\n  return null;\n};\n_s(SpotifyPlayer, \"kplLX/5I7RpTn6FC2X8dCN50v+E=\");\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\nvar _c;\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"names":["React","useState","useEffect","SpotifyPlayer","uri","isPlaying","onPlayPause","_s","player","setPlayer","deviceId","setDeviceId","isReady","setIsReady","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","name","getOAuthToken","cb","localStorage","getItem","volume","addListener","message","console","error","state","paused","device_id","log","connect","disconnect","play","fetch","method","JSON","stringify","uris","headers","resume","pause","_c","$RefreshReg$"],"sources":["C:/Users/samly/Desktop/CvProjects/SpotCIRCLE/frontend/src/components/SpotifyPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SpotifyPlayer = ({ uri, isPlaying, onPlayPause }) => {\n  const [player, setPlayer] = useState(null);\n  const [deviceId, setDeviceId] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    // Load Spotify Web Playback SDK\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: 'SpotCIRCLE Web Player',\n        getOAuthToken: cb => {\n          cb(localStorage.getItem('spotify_access_token'));\n        },\n        volume: 0.5\n      });\n\n      // Error handling\n      player.addListener('initialization_error', ({ message }) => {\n        console.error('Failed to initialize:', message);\n      });\n\n      player.addListener('authentication_error', ({ message }) => {\n        console.error('Failed to authenticate:', message);\n      });\n\n      player.addListener('account_error', ({ message }) => {\n        console.error('Failed to validate Spotify account:', message);\n      });\n\n      player.addListener('playback_error', ({ message }) => {\n        console.error('Failed to perform playback:', message);\n      });\n\n      // Playback status updates\n      player.addListener('player_state_changed', state => {\n        if (state) {\n          onPlayPause(!state.paused);\n        }\n      });\n\n      // Ready\n      player.addListener('ready', ({ device_id }) => {\n        console.log('Ready with Device ID', device_id);\n        setDeviceId(device_id);\n        setIsReady(true);\n        setPlayer(player);\n      });\n\n      player.addListener('not_ready', ({ device_id }) => {\n        console.log('Device ID has gone offline', device_id);\n        setIsReady(false);\n      });\n\n      player.connect();\n    };\n\n    return () => {\n      if (player) {\n        player.disconnect();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!uri || !isReady || !deviceId) return;\n\n    const play = async () => {\n      try {\n        await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\n          method: 'PUT',\n          body: JSON.stringify({ uris: [uri] }),\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('spotify_access_token')}`\n          },\n        });\n      } catch (error) {\n        console.error('Error starting playback:', error);\n      }\n    };\n\n    play();\n  }, [uri, isReady, deviceId]);\n\n  useEffect(() => {\n    if (!player) return;\n\n    if (isPlaying) {\n      player.resume();\n    } else {\n      player.pause();\n    }\n  }, [isPlaying, player]);\n\n  return null;\n};\n\nexport default SpotifyPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}