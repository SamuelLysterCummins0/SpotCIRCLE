{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nconst SpotifyPlayer = ({\n  trackUri,\n  onPlayStateChange\n}) => {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [isPremium, setIsPremium] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n  const [deviceId, setDeviceId] = useState(null);\n  useEffect(() => {\n    // Load Spotify Web Playback SDK\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n\n    // Initialize Spotify Player\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const spotifyPlayer = new window.Spotify.Player({\n        name: 'SpotCIRCLE Web Player',\n        getOAuthToken: cb => {\n          cb(localStorage.getItem('spotify_access_token'));\n        },\n        volume: 0.5\n      });\n\n      // Error handling\n      spotifyPlayer.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error('Failed to initialize:', message);\n      });\n      spotifyPlayer.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error('Failed to authenticate:', message);\n      });\n      spotifyPlayer.addListener('account_error', ({\n        message\n      }) => {\n        console.error('Failed to validate Spotify account:', message);\n      });\n      spotifyPlayer.addListener('playback_error', ({\n        message\n      }) => {\n        console.error('Failed to perform playback:', message);\n      });\n\n      // Playback status updates\n      spotifyPlayer.addListener('player_state_changed', state => {\n        if (state) {\n          onPlayStateChange(!state.paused);\n        }\n      });\n\n      // Ready\n      spotifyPlayer.addListener('ready', ({\n        device_id\n      }) => {\n        console.log('Ready with Device ID', device_id);\n        setDeviceId(device_id);\n        setIsReady(true);\n        setPlayer(spotifyPlayer);\n\n        // Transfer playback to our player\n        transferPlayback(device_id);\n      });\n      spotifyPlayer.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n        setIsReady(false);\n      });\n      spotifyPlayer.connect().then(success => {\n        if (success) {\n          setIsPremium(true);\n        }\n      });\n    };\n    return () => {\n      if (player) {\n        player.disconnect();\n      }\n    };\n  }, []);\n  const transferPlayback = async deviceId => {\n    try {\n      await fetch('https://api.spotify.com/v1/me/player', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('spotify_access_token')}`\n        },\n        body: JSON.stringify({\n          device_ids: [deviceId],\n          play: false\n        })\n      });\n    } catch (error) {\n      console.error('Error transferring playback:', error);\n    }\n  };\n  useEffect(() => {\n    if (!trackUri || !isReady || !deviceId) return;\n    const playTrack = async () => {\n      try {\n        await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('spotify_access_token')}`\n          },\n          body: JSON.stringify({\n            uris: [trackUri]\n          })\n        });\n      } catch (error) {\n        console.error('Error playing track:', error);\n      }\n    };\n    playTrack();\n  }, [trackUri, isReady, deviceId]);\n  const handlePlayPause = async () => {\n    if (!player || !isReady) return;\n    const state = await player.getCurrentState();\n    if (!state) return;\n    if (state.paused) {\n      await player.resume();\n      onPlayStateChange(true);\n    } else {\n      await player.pause();\n      onPlayStateChange(false);\n    }\n  };\n  const handleNext = async () => {\n    if (!player || !isReady) return;\n    await player.nextTrack();\n  };\n  const handlePrevious = async () => {\n    if (!player || !isReady) return;\n    await player.previousTrack();\n  };\n  return null; // This is a non-visual component\n};\n_s(SpotifyPlayer, \"FDd+0OVmT2xvY6VmWwFvKA+V0Ho=\");\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\nvar _c;\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"names":["React","useState","useEffect","SpotifyPlayer","trackUri","onPlayStateChange","_s","player","setPlayer","isPremium","setIsPremium","isReady","setIsReady","deviceId","setDeviceId","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","spotifyPlayer","Spotify","Player","name","getOAuthToken","cb","localStorage","getItem","volume","addListener","message","console","error","state","paused","device_id","log","transferPlayback","connect","then","success","disconnect","fetch","method","headers","JSON","stringify","device_ids","play","playTrack","uris","handlePlayPause","getCurrentState","resume","pause","handleNext","nextTrack","handlePrevious","previousTrack","_c","$RefreshReg$"],"sources":["C:/Users/samly/Desktop/CvProjects/SpotCIRCLE/frontend/src/components/SpotifyPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SpotifyPlayer = ({ trackUri, onPlayStateChange }) => {\n  const [player, setPlayer] = useState(null);\n  const [isPremium, setIsPremium] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n  const [deviceId, setDeviceId] = useState(null);\n\n  useEffect(() => {\n    // Load Spotify Web Playback SDK\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    // Initialize Spotify Player\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const spotifyPlayer = new window.Spotify.Player({\n        name: 'SpotCIRCLE Web Player',\n        getOAuthToken: cb => {\n          cb(localStorage.getItem('spotify_access_token'));\n        },\n        volume: 0.5\n      });\n\n      // Error handling\n      spotifyPlayer.addListener('initialization_error', ({ message }) => {\n        console.error('Failed to initialize:', message);\n      });\n\n      spotifyPlayer.addListener('authentication_error', ({ message }) => {\n        console.error('Failed to authenticate:', message);\n      });\n\n      spotifyPlayer.addListener('account_error', ({ message }) => {\n        console.error('Failed to validate Spotify account:', message);\n      });\n\n      spotifyPlayer.addListener('playback_error', ({ message }) => {\n        console.error('Failed to perform playback:', message);\n      });\n\n      // Playback status updates\n      spotifyPlayer.addListener('player_state_changed', state => {\n        if (state) {\n          onPlayStateChange(!state.paused);\n        }\n      });\n\n      // Ready\n      spotifyPlayer.addListener('ready', ({ device_id }) => {\n        console.log('Ready with Device ID', device_id);\n        setDeviceId(device_id);\n        setIsReady(true);\n        setPlayer(spotifyPlayer);\n        \n        // Transfer playback to our player\n        transferPlayback(device_id);\n      });\n\n      spotifyPlayer.addListener('not_ready', ({ device_id }) => {\n        console.log('Device ID has gone offline', device_id);\n        setIsReady(false);\n      });\n\n      spotifyPlayer.connect().then(success => {\n        if (success) {\n          setIsPremium(true);\n        }\n      });\n    };\n\n    return () => {\n      if (player) {\n        player.disconnect();\n      }\n    };\n  }, []);\n\n  const transferPlayback = async (deviceId) => {\n    try {\n      await fetch('https://api.spotify.com/v1/me/player', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('spotify_access_token')}`\n        },\n        body: JSON.stringify({\n          device_ids: [deviceId],\n          play: false\n        })\n      });\n    } catch (error) {\n      console.error('Error transferring playback:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (!trackUri || !isReady || !deviceId) return;\n\n    const playTrack = async () => {\n      try {\n        await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('spotify_access_token')}`\n          },\n          body: JSON.stringify({\n            uris: [trackUri]\n          })\n        });\n      } catch (error) {\n        console.error('Error playing track:', error);\n      }\n    };\n\n    playTrack();\n  }, [trackUri, isReady, deviceId]);\n\n  const handlePlayPause = async () => {\n    if (!player || !isReady) return;\n\n    const state = await player.getCurrentState();\n    if (!state) return;\n\n    if (state.paused) {\n      await player.resume();\n      onPlayStateChange(true);\n    } else {\n      await player.pause();\n      onPlayStateChange(false);\n    }\n  };\n\n  const handleNext = async () => {\n    if (!player || !isReady) return;\n    await player.nextTrack();\n  };\n\n  const handlePrevious = async () => {\n    if (!player || !isReady) return;\n    await player.previousTrack();\n  };\n\n  return null; // This is a non-visual component\n};\n\nexport default SpotifyPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}